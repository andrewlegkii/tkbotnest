import telebot
from telebot import types
from openpyxl import Workbook, load_workbook
from datetime import datetime
import os
import re

TOKEN = '8045807732:AAEfIFg7FbFVvYUcAbtLwonTjMs1agIIV7g'
bot = telebot.TeleBot(TOKEN)

EXCEL_FILE = 'data.xlsx'
if not os.path.exists(EXCEL_FILE):
    wb = Workbook()
    ws = wb.active
    ws.title = '–î–æ–∫—É–º–µ–Ω—Ç—ã'
    ws.append(['‚Ññ', '–î–∞—Ç–∞/–≤—Ä–µ–º—è', '–¢–ö', '–ù–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞', '–§–æ—Ç–æ –ø—É—Ç—å'])
    wb.save(EXCEL_FILE)

user_states = {}

tc_list = ["–ì–¢–ï", "–ú–û–ù–û–ü–û–õ–ò–Ø", "–û–ë–û–ó", "–õ7", "–¢–¢", "–°–ò–Ø–ù–ò–ï", "–í–û–õ–ö", "–û–õ–ò–ú–ü"]

def send_tc_selection(chat_id):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    for tc in tc_list:
        markup.add(types.KeyboardButton(tc))
    markup.add(types.KeyboardButton("‚Ñπ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"))
    bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –¢–ö –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –≤—Ä—É—á–Ω—É—é:", reply_markup=markup)

@bot.message_handler(commands=['start'])
def start(message):
    user_states[message.chat.id] = {}
    send_tc_selection(message.chat.id)

@bot.message_handler(func=lambda message: message.text == "‚Ñπ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
def info(message):
    info_text = (
        "‚ÑπÔ∏è –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –≤–æ–¥–∏—Ç–µ–ª—è\n\n"
        "üìÑ –ü–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π –Ω–∞–∫–ª–∞–¥–Ω–æ–π –Ω–∞ –ø–æ–¥–¥–æ–Ω—ã:\n\n"
        "–ü–µ—Ä–µ–¥–∞–π—Ç–µ 2 —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –¢–æ—Ä–≥-12 –Ω–∞ –ø–æ–¥–¥–æ–Ω—ã –≤ –æ–∫–Ω–æ –ø—Ä–∏—ë–º–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–∞ –†–¶ –≤–º–µ—Å—Ç–µ —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏ –Ω–∞ –≥—Ä—É–∑.\n"
        "‚ö†Ô∏è –ù–µ–ª—å–∑—è —Ä–∞–∑–¥–µ–ª—è—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω–∞ –≥—Ä—É–∑ –∏ –ø–æ–¥–¥–æ–Ω—ã ‚Äî –Ω–∞–∫–ª–∞–¥–Ω–∞—è –Ω–∞ –ø–æ–¥–¥–æ–Ω—ã –≤—Ö–æ–¥–∏—Ç –≤ –∫–æ–º–ø–ª–µ–∫—Ç —Ç–æ–≤–∞—Ä–Ω–æ-—Å–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –ø—Ä–∏ –ø–æ—Å—Ç–∞–≤–∫–µ –Ω–∞ –†–¶ –¢–∞–Ω–¥–µ—Ä–∞.\n\n"
        "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ–±—ã –Ω–∞ –¢–æ—Ä–≥-12 –∏ –¢—Ä–ù —Å—Ç–æ—è–ª–∏:\n\n"
        "–ü–æ–¥–ø–∏—Å—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –†–¶\n\n"
        "–ü–µ—á–∞—Ç—å –¢–∞–Ω–¥–µ—Ä–∞\n\n"
        "üì∏ –¢–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –ø—Ä–∏–∫—Ä–µ–ø–ª—è–π—Ç–µ —Ñ–æ—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞ —á–µ—Ä–µ–∑ –±–æ—Ç.\n\n"
        "üìß –ö–æ–Ω—Ç–∞–∫—Ç—ã: vozvr_podd@magnit.ru\n"
        "–í –∫–æ–ø–∏—é —Å—Ç–∞–≤—Ç–µ –∞–¥—Ä–µ—Å email: tatyana.gorlevich@nestle.ru"
    )
    bot.send_message(message.chat.id, info_text)

@bot.message_handler(func=lambda message: message.text == "üîô –ù–∞–∑–∞–¥")
def go_back(message):
    user_states[message.chat.id] = {}
    send_tc_selection(message.chat.id)

@bot.message_handler(func=lambda message: message.text == "üìé –û—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â—ë —Å–∫–∞–Ω")
def send_another_scan(message):
    user_states[message.chat.id] = {}
    send_tc_selection(message.chat.id)

@bot.message_handler(func=lambda message: True and message.text not in ["‚Ñπ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "üîô –ù–∞–∑–∞–¥", "üìé –û—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â—ë —Å–∫–∞–Ω"])
def handle_text(message):
    state = user_states.get(message.chat.id, {})
    if 'tc' not in state:
        user_states[message.chat.id] = {'tc': message.text}
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(types.KeyboardButton("üîô –ù–∞–∑–∞–¥"))
        bot.send_message(message.chat.id, f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –¢–ö: {message.text}\n–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, R101...)",
                         reply_markup=markup)
    elif 'doc' not in state:
        doc_number = message.text.strip()
        # –ò–∑–º–µ–Ω–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Ä–µ–≥–∏—Å—Ç—Ä –±—É–∫–≤—ã R
        if not re.match(r"^[Rr]101\d+$", doc_number):
            bot.send_message(message.chat.id, "‚ùå –ù–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞ –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å R101 –∏–ª–∏ r101 –∏ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã –ø–æ—Å–ª–µ.")
            return
        user_states[message.chat.id]['doc'] = doc_number
        bot.send_message(
            message.chat.id,
            "–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –Ω–∞–∫–ª–∞–¥–Ω–æ–π üì∑\n‚ÄºÔ∏è –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–∞ –¢–æ—Ä–≥-12 –∏ –¢–ù –µ—Å—Ç—å –ø–æ–¥–ø–∏—Å—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –†–¶ –∏ –ø–µ—á–∞—Ç—å –¢–∞–Ω–¥–µ—Ä–∞."
        )

@bot.message_handler(content_types=['photo'])
def handle_photo(message):
    state = user_states.get(message.chat.id)
    if not state or 'doc' not in state or 'tc' not in state:
        bot.send_message(message.chat.id, "–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –¢–ö –∏ –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞.")
        return

    doc_number = state['doc']
    tc_name = state['tc']

    # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–æ—Ç–æ
    file_info = bot.get_file(message.photo[-1].file_id)
    downloaded_file = bot.download_file(file_info.file_path)

    folder = "photos"
    os.makedirs(folder, exist_ok=True)
    file_path = os.path.join(folder, f"{doc_number}.jpg")

    with open(file_path, 'wb') as f:
        f.write(downloaded_file)

    # –ó–∞–ø–∏—Å—å –≤ Excel
    wb = load_workbook(EXCEL_FILE)
    ws = wb.active
    row_number = ws.max_row
    now = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
    ws.append([row_number, now, tc_name, doc_number, file_path])
    wb.save(EXCEL_FILE)

    # –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("üìé –û—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â—ë —Å–∫–∞–Ω"))
    bot.send_message(
        message.chat.id,
        f"‚úÖ –î–æ–∫—É–º–µ–Ω—Ç {doc_number} –∑–∞–≥—Ä—É–∂–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω.\n–°–ø–∞—Å–∏–±–æ!",
        reply_markup=markup
    )

    user_states.pop(message.chat.id, None)

# –ó–∞–ø—É—Å–∫
if __name__ == '__main__':
    print("Bot is running...")
    bot.infinity_polling(timeout=60, long_polling_timeout=60)
