import telebot
from telebot import types
from openpyxl import Workbook, load_workbook
from datetime import datetime
import os
import re

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
TOKEN = '7742178744:AAHMG4v5D2IgUA82s1oYM4B1jEYPW7gzT44'
bot = telebot.TeleBot(TOKEN)

EXCEL_FILE = 'data.xlsx'
PHOTOS_FOLDER = 'photos'

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Ñ–æ—Ç–æ, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
os.makedirs(PHOTOS_FOLDER, exist_ok=True)

# –°–æ–∑–¥–∞–µ–º Excel, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if not os.path.exists(EXCEL_FILE):
    wb = Workbook()
    ws = wb.active
    ws.title = '–î–æ–∫—É–º–µ–Ω—Ç—ã'
    ws.append(['‚Ññ', '–î–∞—Ç–∞/–≤—Ä–µ–º—è', '–¢–ö', '–ù–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞', '–°—Ç–∞—Ç—É—Å'])
    wb.save(EXCEL_FILE)

# ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏ –ø–∞—Ä–æ–ª—å –¥–ª—è –≤—ã–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
admin_id = 360300829
DATA_PASSWORD = "2695"

# –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}

# === –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö –∏–∑ users.txt ===
def load_user_companies():
    user_companies = {}
    if os.path.exists("users.txt"):
        with open("users.txt", "r", encoding="utf-8") as f:
            for line in f:
                if "-" in line:
                    parts = line.strip().split(" - ", 1)
                    if len(parts) == 2:
                        user_id_str, company = parts
                        if user_id_str.isdigit():
                            user_companies[int(user_id_str)] = company
    return user_companies


# === –ö–æ–º–∞–Ω–¥–∞ /start ===
@bot.message_handler(commands=['start'])
def start(message):
    user_states[message.chat.id] = {}
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("‚Ñπ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"))
    markup.add(types.KeyboardButton("üÜò –ü–æ–º–æ—â—å"))
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, R101...)", reply_markup=markup)

# === –ö–æ–º–∞–Ω–¥–∞ /data ‚Äî –≤—ã–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ Excel ===
@bot.message_handler(commands=['data'])
def send_data_file(message):
    args = message.text.split(maxsplit=1)
    if len(args) < 2:
        bot.reply_to(message, "‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ –ø–∞—Ä–æ–ª—å –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä:\n/data –ø–∞—Ä–æ–ª—å123")
        return
    password = args[1].strip()
    if password != DATA_PASSWORD:
        bot.reply_to(message, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å!")
        return
    try:
        with open(EXCEL_FILE, 'rb') as f:
            bot.send_document(message.chat.id, f)
    except Exception as e:
        bot.reply_to(message, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞: {e}")

# === –ö–Ω–æ–ø–∫–∞ "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è" ===
@bot.message_handler(func=lambda message: message.text == "‚Ñπ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
def info(message):
    info_text = (
        "‚ÑπÔ∏è –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –≤–æ–¥–∏—Ç–µ–ª—è\n\n"
        "üìÑ –ü–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π –Ω–∞–∫–ª–∞–¥–Ω–æ–π –Ω–∞ –ø–æ–¥–¥–æ–Ω—ã:\n\n"
        "–ü–µ—Ä–µ–¥–∞–π—Ç–µ 2 —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –¢–æ—Ä–≥-12 –Ω–∞ –ø–æ–¥–¥–æ–Ω—ã –≤ –æ–∫–Ω–æ –ø—Ä–∏—ë–º–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–∞ –†–¶ –≤–º–µ—Å—Ç–µ —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏ –Ω–∞ –≥—Ä—É–∑.\n"
        "‚ö†Ô∏è –ù–µ–ª—å–∑—è —Ä–∞–∑–¥–µ–ª—è—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω–∞ –≥—Ä—É–∑ –∏ –ø–æ–¥–¥–æ–Ω—ã ‚Äî –Ω–∞–∫–ª–∞–¥–Ω–∞—è –Ω–∞ –ø–æ–¥–¥–æ–Ω—ã –≤—Ö–æ–¥–∏—Ç –≤ –∫–æ–º–ø–ª–µ–∫—Ç —Ç–æ–≤–∞—Ä–Ω–æ-—Å–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –ø—Ä–∏ –ø–æ—Å—Ç–∞–≤–∫–µ –Ω–∞ –†–¶ –¢–∞–Ω–¥–µ—Ä–∞.\n\n"
        "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ–±—ã –Ω–∞ –¢–æ—Ä–≥-12 –∏ –¢—Ä–ù —Å—Ç–æ—è–ª–∏:\n\n"
        "–ü–æ–¥–ø–∏—Å—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –†–¶\n\n"
        "–ü–µ—á–∞—Ç—å –¢–∞–Ω–¥–µ—Ä–∞\n\n"
        "üì∏ –¢–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –ø—Ä–∏–∫—Ä–µ–ø–ª—è–π—Ç–µ —Ñ–æ—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞ —á–µ—Ä–µ–∑ –±–æ—Ç.\n\n"
    )
    bot.send_message(message.chat.id, info_text)

# === –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" ===
@bot.message_handler(func=lambda message: message.text == "üîô –ù–∞–∑–∞–¥")
def go_back(message):
    user_states[message.chat.id] = {}
    start(message)

# === –ö–Ω–æ–ø–∫–∞ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â—ë —Å–∫–∞–Ω" ===
@bot.message_handler(func=lambda message: message.text == "üìé –û—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â—ë —Å–∫–∞–Ω")
def send_another_scan(message):
    user_states[message.chat.id] = {}
    start(message)

# === –ö–Ω–æ–ø–∫–∞ "–ü–æ–º–æ—â—å" ===
@bot.message_handler(func=lambda message: message.text == "üÜò –ü–æ–º–æ—â—å")
def help_start(message):
    user_states[message.chat.id] = {'help_mode': True}
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(types.KeyboardButton("üîô –ù–∞–∑–∞–¥"))
    bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É. –ß—Ç–æ–±—ã –≤—ã–π—Ç–∏, –Ω–∞–∂–º–∏—Ç–µ 'üîô –ù–∞–∑–∞–¥'.", reply_markup=markup)

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π ===
@bot.message_handler(func=lambda message: True)
def handle_text(message):
    state = user_states.get(message.chat.id, {})

    # –†–µ–∂–∏–º –ø–æ–º–æ—â–∏ ‚Äî –ø–µ—Ä–µ—Å—ã–ª–∞–µ–º –∞–¥–º–∏–Ω—É
    if state.get('help_mode'):
        if message.text == "üîô –ù–∞–∑–∞–¥":
            user_states[message.chat.id] = {}
            start(message)
            return
        bot.send_message(admin_id, f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @{message.from_user.username or message.from_user.first_name} (ID {message.chat.id}):\n{message.text}")
        bot.send_message(message.chat.id, "‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç.")
        return

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –Ω–æ–º–µ—Ä–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    if 'doc' not in state:
        doc_number = message.text.strip()

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –Ω–æ–º–µ—Ä–∞ (R101 + —Ü–∏—Ñ—Ä—ã, –º–∞–∫—Å–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤)
        if not re.match(r"^[Rr]101\d{0,7}$", doc_number) or len(doc_number) > 10:
            error_msg = "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞!\n\n" \
                      "–ù–æ–º–µ—Ä –¥–æ–ª–∂–µ–Ω:\n" \
                      "‚Ä¢ –ù–∞—á–∏–Ω–∞—Ç—å—Å—è —Å R101\n" \
                      "‚Ä¢ –°–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã –ø–æ—Å–ª–µ R101\n" \
                      "‚Ä¢ –ë—ã—Ç—å –Ω–µ –¥–ª–∏–Ω–Ω–µ–µ 10 —Å–∏–º–≤–æ–ª–æ–≤\n\n" \
                      "–ü—Ä–∏–º–µ—Ä: R10112345"
            bot.send_message(message.chat.id, error_msg)
            return

        user_states[message.chat.id] = {'doc': doc_number}  # –¢–µ–ø–µ—Ä—å –¢–ö –±—É–¥–µ—Ç –≤–∑—è—Ç –∏–∑ users.txt
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(types.KeyboardButton("üîô –ù–∞–∑–∞–¥"))
        markup.add(types.KeyboardButton("üÜò –ü–æ–º–æ—â—å"))
        bot.send_message(
            message.chat.id,
            "–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –Ω–∞–∫–ª–∞–¥–Ω–æ–π üì∑\n‚ÄºÔ∏è –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–∞ –¢–æ—Ä–≥-12 –∏ –¢–ù –µ—Å—Ç—å:\n"
            "‚Ä¢ –ü–æ–¥–ø–∏—Å—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –†–¶\n‚Ä¢ –ü–µ—á–∞—Ç—å –¢–∞–Ω–¥–µ—Ä–∞",
            reply_markup=markup
        )
        return

    bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –Ω–∞–∫–ª–∞–¥–Ω–æ–π –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏.")

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ ===
@bot.message_handler(content_types=['photo'])
def handle_photo(message):
    state = user_states.get(message.chat.id)
    if not state or 'doc' not in state:
        bot.send_message(message.chat.id, "–°–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞.")
        return

    doc_number = state['doc']
    user_id = message.chat.id
    now = datetime.now().strftime('%Y-%m-%d %H:%M:%S')

    # –ü–æ–¥–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∫–æ–º–ø–∞–Ω–∏—è—Ö
    user_companies = load_user_companies()
    company_name = user_companies.get(user_id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ç–æ
    file_info = bot.get_file(message.photo[-1].file_id)
    downloaded_file = bot.download_file(file_info.file_path)

    file_path = os.path.join(PHOTOS_FOLDER, f"{doc_number}.jpg")

    with open(file_path, 'wb') as f:
        f.write(downloaded_file)

    wb = load_workbook(EXCEL_FILE)
    ws = wb.active
    row_number = ws.max_row + 1
    ws.append([row_number, now, company_name, doc_number, "–û–∂–∏–¥–∞–µ—Ç"])
    wb.save(EXCEL_FILE)

    caption = (
        f"üì∏ –ù–æ–≤–æ–µ —Ñ–æ—Ç–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (ID: {user_id})\n"
        f"–¢–ö: {company_name}\n"
        f"–î–æ–∫—É–º–µ–Ω—Ç: {doc_number}\n"
        f"–î–∞—Ç–∞: {now}"
    )

    markup_admin = types.InlineKeyboardMarkup()
    btn_approve = types.InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"approve_{user_id}_{doc_number}")
    btn_reject = types.InlineKeyboardButton("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject_{user_id}_{doc_number}")
    markup_admin.add(btn_approve, btn_reject)

    with open(file_path, 'rb') as photo:
        bot.send_photo(admin_id, photo, caption=caption, reply_markup=markup_admin)

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("üìé –û—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â—ë —Å–∫–∞–Ω"))
    bot.send_message(
        message.chat.id,
        f"‚úÖ –î–æ–∫—É–º–µ–Ω—Ç {doc_number} –∑–∞–≥—Ä—É–∂–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω.\n–°–ø–∞—Å–∏–±–æ!",
        reply_markup=markup
    )

    user_states.pop(message.chat.id, None)

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è ===
@bot.callback_query_handler(func=lambda call: True)
def handle_callback_query(call):
    data = call.data.split('_')
    action = data[0]
    user_id = int(data[1])
    doc_number = data[2]

    wb = load_workbook(EXCEL_FILE)
    ws = wb.active

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –¥–æ–∫—É–º–µ–Ω—Ç–∞ –≤ Excel
    for row in ws.iter_rows(min_col=4, max_col=4):  # –ò—â–µ–º –ø–æ —Å—Ç–æ–ª–±—Ü—É D (–ù–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞)
        for cell in row:
            if cell.value == doc_number:
                status_cell = ws.cell(row=cell.row, column=5)
                if action == "approve":
                    status_cell.value = "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω"
                    bot.send_message(user_id, f"‚úÖ –î–æ–∫—É–º–µ–Ω—Ç {doc_number} —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω!")
                    bot.answer_callback_query(call.id, "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ")
                elif action == "reject":
                    status_cell.value = "–û—Ç–∫–ª–æ–Ω—ë–Ω"
                    bot.send_message(user_id, f"‚ùå –î–æ–∫—É–º–µ–Ω—Ç {doc_number} –Ω–µ –ø—Ä–æ—à—ë–ª –ø—Ä–æ–≤–µ—Ä–∫—É.")
                    bot.answer_callback_query(call.id, "‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–æ")
                break
    wb.save(EXCEL_FILE)

# === –ö–æ–º–∞–Ω–¥–∞ /reply ‚Äî –æ—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (–ø–æ –∂–µ–ª–∞–Ω–∏—é) ===
@bot.message_handler(commands=['reply'])
def admin_reply(message):
    if message.chat.id != admin_id:
        return

    parts = message.text.split(' ', 2)
    if len(parts) < 3:
        bot.send_message(admin_id, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /reply <user_id> <—Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞>")
        return
    user_id_str, answer = parts[1], parts[2]

    if not user_id_str.isdigit():
        bot.send_message(admin_id, "ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º.")
        return
    user_id_int = int(user_id_str)

    try:
        bot.send_message(user_id_int, f"üí¨ –û—Ç–≤–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n{answer}")
        bot.send_message(admin_id, "–û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")
    except Exception as e:
        bot.send_message(admin_id, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

# === –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===
if __name__ == '__main__':
    print("Bot is running...")
    bot.infinity_polling(timeout=60, long_polling_timeout=60)
